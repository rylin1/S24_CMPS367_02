#include <iostream>
#include <string>
#include <cstdlib>
#include <ctime>

using namespace std;

class BankAccount {
private:
    string name;
    double balance;
    int accountNumber;
    static int nextAccountNumber;

public:
    BankAccount(string n, double b) {
        name = n;
        balance = b;
        srand(time(0));
        accountNumber = ++nextAccountNumber;
    }

    void deposit(double amount) {
        balance += amount;
    }

    bool withdraw(double amount) {
        if (balance >= amount) {
            balance -= amount;
            return true;
        }
        return false;
    }

    double getBalance() {
        return balance;
    }

    int getAccountNumber() {
        return accountNumber;
    }

    string getName() {
        return name;
    }
};

int BankAccount::nextAccountNumber = 0;

int main() {
    const int MAX_ACCOUNTS = 100;
    BankAccount* accounts[MAX_ACCOUNTS];
    int numAccounts = 0;

    cout << "*************** Welcome to Chase ***************" << endl;
    cout << "Please choose one of the following operations" << endl;
    cout << "1- Create a new bank account with an initial balance" << endl;
    cout << "2- Deposit Money to an Account" << endl;
    cout << "3- Withdraw Money from an Account" << endl;
    cout << "4- Display Current Balance of an Account" << endl;

    int choice;
    cin >> choice;

    switch (choice) {
        case 1: {
            string name;
            double initialBalance;
            cout << "Enter your name: ";
            cin >> name;
            cout << "Enter your initial balance: ";
            cin >> initialBalance;
            accounts[numAccounts] = new BankAccount(name, initialBalance);
            cout << "Congratulations " << name << "! You have successfully opened your new bank account with an initial balance of $" << initialBalance << ". Your account number is " << accounts[numAccounts]->getAccountNumber() << "." << endl;
            numAccounts++;
            break;
        }
        case 2: {
            int accountNumber;
            double depositAmount;
            cout << "Enter the account number: ";
            cin >> accountNumber;
            bool found = false;
            for (int i = 0; i < numAccounts; ++i) {
                if (accounts[i]->getAccountNumber() == accountNumber) {
                    found = true;
                    cout << "Enter the amount that you would like to deposit: ";
                    cin >> depositAmount;
                    accounts[i]->deposit(depositAmount);
                    cout << "Congratulations " << accounts[i]->getName() << "! You have successfully deposited the amount of $" << depositAmount << " in your account #" << accountNumber << ". Your current balance is $" << accounts[i]->getBalance() << "." << endl;
                    break;
                }
            }
            if (!found) {
                cout << "No account number exists!" << endl;
            }
            break;
        }
        case 3: {
            int accountNumber;
            double withdrawAmount;
            cout << "Enter the account number: ";
            cin >> accountNumber;
            bool found = false;
            for (int i = 0; i < numAccounts; ++i) {
                if (accounts[i]->getAccountNumber() == accountNumber) {
                    found = true;
                    cout << "Enter the amount that you would like to withdraw: ";
                    cin >> withdrawAmount;
                    if (accounts[i]->withdraw(withdrawAmount)) {
                        cout << "Congratulations " << accounts[i]->getName() << "! You have successfully withdrawn the amount of $" << withdrawAmount << " in your account #" << accountNumber << ". Your current balance is $" << accounts[i]->getBalance() << "." << endl;
                    } else {
                        cout << "Insufficient funds!" << endl;
                    }
                    break;
                }
            }
            if (!found) {
                cout << "No account number exists!" << endl;
            }
            break;
        }
        case 4: {
            int accountNumber;
            cout << "Enter the account number: ";
            cin >> accountNumber;
            bool found = false;
            for (int i = 0; i < numAccounts; ++i) {
                if (accounts[i]->getAccountNumber() == accountNumber) {
                    found = true;
                    cout << "Your current balance is $" << accounts[i]->getBalance() << "." << endl;
                    break;
                }
            }
            if (!found) {
                cout << "No account number exists!" << endl;
            }
            break;
        }
        default:
            cout << "Invalid choice" << endl;
    }

    // Clean up allocated memory
    for (int i = 0; i < numAccounts; ++i) {
        delete accounts[i];
    }

    return 0;
}
